{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Physics.ts","webpack:///./src/Projectile.ts","webpack:///./src/Vec.ts","webpack:///./src/Worker.ts"],"names":[],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Worker.ts\");\n","import Projectile from './Projectile';\nimport Vec, {Vector} from './Vec';\n\n\nclass Physics {\n    projs: Projectile[];\n    bigG: number;\n    inverseDegree: number;\n    _stop: boolean;\n    rules: any;\n\n    constructor(rules = {}) {\n        this.bigG = 100;\n        this.projs = [];\n        this.rules = rules;\n    }\n\n    setRules(rules) {\n        Object.assign(this.rules, rules);\n    }\n\n    addProj(proj: Projectile) {\n        this.projs.push(proj);\n    }\n\n    calcForce(proj: Projectile, other: Projectile) :Vector {\n        //Get force exerted on proj by other projectile.\n        let displacement = other.position.minus(proj.position);\n        let dist = displacement.magnitude;\n        \n        //Note: no mention of inversedegree here\n        let force: Vector = displacement.normalize().times_(\n            (this.rules.bigG || this.bigG)*proj.mass*other.mass / Math.pow(dist, this.rules.inverseDegree || 2));\n\n        return force;\n    }\n\n    integrateSemiImplicitEuler(h) {\n        this.projs.forEach((proj, _, arr) => {\n            let totalForce = arr\n                .filter(other => other.id !== proj.id)\n                .map(other => this.calcForce(proj, other))\n                .reduce((acc, cur) => acc.plus_(cur), Vec(0,0));\n            proj.acceleration = totalForce.times(1/proj.mass);\n        });\n        this.projs.forEach(proj => { proj.velocity.plus_(proj.acceleration.times(h))});\n        this.projs.forEach(proj => { proj.position.plus_(proj.velocity.times(h))});\n    }\n\n    step(h) {\n        this.computeCollisions();\n        this.integrateSemiImplicitEuler(h);\n        return this.projs;\n    }\n\n\n    collide(p1, p2) {\n        let mass = +p1.mass + +p2.mass;\n        let position = p1.position.times(p1.mass).plus(p2.position.times(p2.mass)).times(1/mass);\n        let velocity = p1.momentum.plus(p2.momentum).times(1/mass);\n        return new Projectile(position, velocity, mass);\n    }\n\n    computeCollisions() {\n        return this.projs = this.projs.reduce((projectiles: Projectile[], cur: Projectile) => {\n            let idx = projectiles.findIndex(other => \n              cur.position.minus(other.position).magnitude < (cur.radius + other.radius / 2));\n            if (idx === -1) {\n              projectiles.push(cur);\n              return projectiles;\n            }\n            projectiles[idx] = this.collide(projectiles[idx], cur);\n            return projectiles;\n          }, []);\n    }\n\n}\nexport default Physics;","import Vec, { Vector } from './Vec';\nimport constants from './Options'\n// declare let require;\nimport * as interpolate from 'color-interpolate';\nimport { arrow } from './View';\n\nclass Projectile {\n  mass: number;\n  position: Vector;\n  velocity: Vector;\n  acceleration: Vector;\n  id: number;\n  _radius: number;\n  constructor(position, velocity, mass?) {\n    this.position = position;\n    this.velocity = velocity;\n    this.acceleration = Vec(0,0);\n    this.mass = mass || 50;\n    this.id = Math.random();\n  }\n\n  get momentum() : Vector {\n    return this.velocity.times(this.mass);\n  }\n\n  set momentum(vec: Vector) {\n    this.velocity = vec.times(1/this.mass)\n  }\n\n  /*\n  computeColor () {\n    let colormap = interpolate(['white', 'brown', 'orange', 'red']);\n    return colormap(Math.log10(Math.max(this.mass, 1))/4);\n  }\n  */\n\n  /*\n  updateAcceleration (projectiles: Projectile[]) {\n    return this.acceleration = projectiles\n      .filter(({ id }) => (id != this.id))\n      .map(proj => ({\n        displacement: this.position.minus(proj.position),\n        mass: proj.mass\n      }))\n      .map(({displacement, mass}) => Vec(\n        // Gmm/r^2 \n        constants.bigG*mass/(Math.pow(displacement.magnitude, constants.inverseDegree)),\n        displacement.angle,\n        true // Is polar\n      ))\n      .reduce((total, cur) => total.plus(cur), Vec())\n      //.times(1/this.mass)\n  }\n  */\n\n  /*\n  getForce(projectiles) {\n    return projectiles\n    .filter(({ id }) => (id != this.id))\n    .map(proj => ({\n      displacement: this.position.minus(proj.position),\n      mass: proj.mass\n    }))\n    .map(({displacement, mass}) => Vec(\n      // Gmm/r^2 \n      constants.bigG*mass*this.mass/(Math.pow(displacement.magnitude, constants.inverseDegree)),\n      displacement.angle,\n      true // Is polar\n    ))\n    .reduce((total, cur) => total.plus(cur), Vec())\n  }\n  */\n\n  //The new and improved updateVelocity & updatePosition\n  \n  // verletIntegrate(elapsedTime, projectiles) {\n  //   let a_0 = this.acceleration.plus(Vec(0,0));\n\n  //   // d = v1*t + 1/2at^2\n  //   let delta = this.velocity.times(elapsedTime).plus(a_0.times(0.5*elapsedTime*elapsedTime));\n  //   this.position = this.position.plus(delta);\n\n  //   this.updateAcceleration(projectiles);\n  //   let avgAcceleration = a_0.plus(this.acceleration).times(0.5);\n\n  //   // a = (v2 - v1) / t => v2 = v1 + at\n  //   this.velocity = this.velocity.plus(avgAcceleration.times(elapsedTime));\n\n  //   return this;\n  // }\n\n  // implicitEulerIntegrate(h, projectiles) {\n  //   this.updateAcceleration(projectiles);\n  //   this.velocity = this.velocity.plus(this.acceleration.times(h));\n  //   this.position = this.position.plus(this.velocity.times(h));\n  //   return this;\n  // }\n\n  // eulerIntegrate(h, projectiles) {\n  //   this.updateAcceleration(projectiles);\n  //   this.position = this.position.plus(this.velocity.times(h));\n  //   this.velocity = this.velocity.plus(this.acceleration.times(h));\n  //   return this;\n  // }\n\n  // midpointIntegrate(h, projectiles) {\n  //   this.position = this.position.plus(this.velocity.times(h/2));\n  //   this.velocity = this.velocity.plus(this.updateAcceleration(projectiles).times(h));\n  //   this.position = this.position.plus(this.velocity.times(h/2));\n  //   return this;\n  // }\n\n  // fourthOrderIntegrate(h, projectiles) {\n  //   // n = 2^(1/3)\n  //   const n = 1.2599210498948732;\n  //   const w_0 = 1/(2-n);\n  //   const w_1 = -n/(2-n);\n  //   this.midpointIntegrate(w_0*h, projectiles);\n  //   this.midpointIntegrate(w_1*h, projectiles);\n  //   this.midpointIntegrate(w_0*h, projectiles);\n  //   return this;\n  // }\n\n  // //static momentumIntegrate()\n\n\n  // static RK4Integrate(h: number, projectiles: Projectile[]) {\n\n  //   let v1 = projectiles.map(proj => proj.velocity);\n  //   let p1 = projectiles.map(proj => proj.position);\n  //   let a1 = projectiles.map(proj => proj.updateAcceleration(projectiles));\n\n  //   let v2 = v1.map((vel, i) => vel.plus(a1[i].times(h/2)));\n  //   let p2 = p1.map((pos, i) => pos.plus(v1[i].times(h/2)));\n  //   projectiles.forEach((proj, i) => {proj.position = p2[i]});\n  //   let a2 = projectiles.map(proj => proj.updateAcceleration(projectiles));\n\n  //   let v3 = v2.map((vel, i) => vel.plus(a2[i].times(h/2)));\n  //   let p3 = p2.map((pos, i) => pos.plus(v2[i].times(h/2)));\n  //   projectiles.forEach((proj, i) => {proj.position = p3[i]});\n  //   let a3 = projectiles.map(proj => proj.updateAcceleration(projectiles));\n\n  //   let v4 = v3.map((vel, i) => vel.plus(a3[i].times(h)));\n  //   let p4 = p3.map((pos, i) => pos.plus(v3[i].times(h)));\n  //   projectiles.forEach((proj, i) => {proj.position = p4[i]});\n  //   let a4 = projectiles.map(proj => proj.updateAcceleration(projectiles));\n\n  //   projectiles.forEach((proj, i) => {\n  //     proj.acceleration = a1[i].plus(a2[i].times(2)).plus(a3[i].times(2)).plus(a4[i]).times(1/6);\n  //     proj.velocity = v1[i].plus(v2[i].times(2)).plus(v3[i].times(2)).plus(v4[i]).times(1/6);\n  //     proj.position = proj.position.plus(proj.velocity.times(h));\n  //     proj.velocity = proj.velocity.plus(proj.acceleration.times(h));\n  //   });\n\n\n  //   return projectiles;\n\n  // }\n\n  computeRadius() {\n    return (Math.log(Math.abs(this.mass))+2)/1.5;\n  }\n\n  get radius() {\n    return this._radius || (this._radius = this.computeRadius());\n  }\n\n  \n  /*\n  static computeCollision(p1, p2) {\n    let mass = +p1.mass + +p2.mass;\n    let position = p1.position.times(p1.mass).plus(p2.position.times(p2.mass)).times(1/mass);\n    let velocity = p1.momentum.plus(p2.momentum).times(1/mass);\n    return new Projectile(position, velocity, mass);\n  }\n  */\n}\n\nexport default Projectile;\n\n/*\ndraw(cx: CanvasRenderingContext2D) {\n  cx.save();\n  //cx.translate(0.5, 0.5);\n\n\n\n  cx.fillStyle = cx.strokeStyle = this.computeColor();\n  cx.beginPath();\n  cx.arc(this.position.x, this.position.y, this.computeRadius(), 0, 2*Math.PI);\n  cx.fill();\n\n  if (constants.velocityArrow)\n    arrow(cx, this.position, this.position.plus(this.velocity));\n  if (constants.accelerationArrow)\n    arrow(cx, this.position, this.position.plus(this.acceleration));\n  cx.restore();\n}\n*/","class Vector{\n  x: number;\n  y: number;\n  constructor(x?: number, y?: number, isPolar?: boolean) {\n    if (!(this instanceof Vector)) {\n      return new Vector(...arguments);\n    }\n    if (x === undefined) {\n      this.x = 0;\n      this.y = 0;\n      return;\n    }\n    if (isPolar) {\n      // x = magnitude, y = angle\n      this.x = x * Math.cos(y);\n      this.y = x * Math.sin(y);\n      return;\n    }\n    this.x = x;\n    this.y = y;\n  }\n\n  toPolar() {\n    return {\n      magnitude: Math.hypot(this.x, this.y),\n      angle: Math.atan2(this.y, this.x)\n    };\n  }\n\n  get magnitude() {\n    return Math.hypot(this.x, this.y);\n  }\n\n  get angle() {\n    return Math.atan2(this.y, this.x);\n  }\n  \n  get degrees() {\n    return this.angle / Math.PI * 180;\n  }\n\n  normalize() {\n    return this.times(1/this.magnitude);\n  }\n\n  normalize_() {\n    this.x /= this.magnitude;\n    this.y /= this.magnitude;\n    return this;\n  }\n\n  plus(v) {\n    return new Vector(\n      this.x + v.x,\n      this.y + v.y\n    );\n  }\n\n  \n  plus_(v) {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n\n  minus(v) {\n    return new Vector(\n      this.x - v.x,\n      this.y - v.y\n    );\n  }\n\n  minus_(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n\n  times(scalar) {\n    return new Vector(\n      this.x * scalar,\n      this.y * scalar\n    );\n  }\n\n  times_(s) {\n    this.x *= s;\n    this.y *= s;\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  cross(v) {\n    return this.x * v.y - this.y * v.x;\n  }\n\n  rotateAround(a, point) {\n    let {magnitude, angle} = this.minus(point).toPolar();\n    angle += a;\n    return (new Vector(magnitude, angle, true)).plus(point);\n  }\n\n  rotate(a) {\n    if (Math.abs(a) > 2 * Math.PI) console.log('Check to see if your rotations are in radians');\n    let {magnitude, angle} = this.toPolar();\n    angle += a;\n    return new Vector(magnitude, angle, true);\n  }\n\n  proj(v) {\n    let vhat = v.normalize();\n    return vhat.times(this.dot(vhat));\n  }\n}\n\nlet Vec = function(x?, y?, isPolar?): Vector { return new Vector(x, y, isPolar); };\nexport default Vec;\n\nexport { Vector };","import Physics from './Physics'\nimport Projectile from './Projectile';\n//import PathHistory from './Paths';\nimport Vec from './Vec'\n\nlet physics = new Physics();\n//let pathHistory = new PathHistory();\n\nonmessage = (e: MessageEvent) => {\n    let data = e.data;\n\n    switch (data.type) {\n        case 'new-projectile':\n            handleNewProjectile(data);\n            break;\n\n        case 'set-engine-rules':\n            if (!e.data.rules) throw Error('No such rules');\n            physics.setRules(e.data.rules);\n            break;\n    \n        default:\n            throw Error('Unhandled message to worker');\n            break;\n    }\n};\n\nfunction handleNewProjectile(data) {\n    physics.addProj(new Projectile(\n        Vec(data.projectile.position.x, data.projectile.position.y), \n        Vec(data.projectile.velocity.x, data.projectile.velocity.y), \n        data.projectile.mass\n    ));\n}\n\nfunction loop() {\n    let start = performance.now();\n    let projectiles = physics.step(1/60);\n    //pathHistory.addStep(projectiles);\n    postMessage({type: 'simulation-step', projectiles: projectiles});\n    setTimeout(loop, 1000/60 - (performance.now() - start));\n}\nloop();"],"sourceRoot":""}